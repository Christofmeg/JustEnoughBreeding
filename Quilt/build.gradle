plugins {
    id 'org.quiltmc.loom' version '1.3.+'
    id 'idea'
}

archivesBaseName = "${mod_id}-quilt-${quilt_supported_versions}"

project.configurations.configureEach {
    exclude(group: "net.fabricmc", module: "fabric-loader")
    exclude(group: "net.fabricmc.fabric-api")
}

dependencies {
    minecraft "com.mojang:minecraft:${quilt_minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilt_version}-${minecraft_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")

    // FORGE CONFIG API PORT FABRIC
    if (project.hasProperty('forge_config_api_version')) {
        modImplementation "curse.maven:forge-config-api-port-fabric-547434:${forge_config_api_version}"
        implementation 'com.electronwill.night-config:core:3.6.5'
        implementation 'com.electronwill.night-config:toml:3.6.5'
    }

    // JEI
    if (project.hasProperty('jei_version')) {
        modCompileOnly("mezz.jei:jei-${fabric_minecraft_version}-common-api:${jei_version}")
        modCompileOnly("mezz.jei:jei-${fabric_minecraft_version}-fabric-api:${jei_version}")
//        modRuntimeOnly("mezz.jei:jei-${fabric_minecraft_version}-fabric:${jei_version}")
    }

    // CONFIGURED
    if (project.hasProperty('fabric_configured_version')) {
        modImplementation "curse.maven:configured-fabric-667378:${fabric_configured_version}"
    }

    // CATALOGUE
    if (project.hasProperty('fabric_catalogue_version')) {
        modImplementation("curse.maven:catalogue-667377:${fabric_catalogue_version}")
        if (project.hasProperty('fabric_menulogue_version')) {
            modImplementation "curse.maven:menulogue-682371:${fabric_menulogue_version}"
        }
    }
}

loom {
    runs {
        client {
            client()
            setConfigName("Quilt Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Quilt Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}

java {
    // Still required by IDEs such as Eclipse and Visual Studio Code
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
