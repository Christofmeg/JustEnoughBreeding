subprojects {
    
    apply plugin: 'java'
    
    java.toolchain.languageVersion = JavaLanguageVersion.of(16)
        
    jar {
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        repositories {
            /*
            maven {
                // location of the maven that hosts JEI files
                name = "Progwml6 maven"
                url = "https://dvs1.progwml6.com/files/maven/"
                content {
                    includeGroup "mezz.jei"
                }
            }
             */
            maven {
                // location of a maven mirror for JEI files, as a fallback
                name = "ModMaven"
                url = "https://modmaven.dev/"
                content {
                    includeGroup "mezz.jei"
                }
            }
            maven {
                url "https://www.cursemaven.com"
                content {
                    includeGroup "curse.maven"
                }
            }

        }
    }

    tasks.withType(JavaCompile).configureEach {
    
        it.options.encoding = 'UTF-8'
        it.options.release = 16
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }
}
