import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    id 'net.neoforged.gradle.userdev' version '7.0.142'
    id 'net.darkhax.curseforgegradle' version '1.+'
    id 'com.modrinth.minotaur' version '2.+'
}

base {
    archivesName = "${mod_id}-${project.name}-${neoforge_supported_versions}"
}

runs {
    configureEach {
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }
}

subsystems {
    parchment {
        minecraftVersion = "${parchment_mc}"
        mappingsVersion = "${parchment_version}"
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    // JEI
    if (project.hasProperty('jei_version')) {
        compileOnly("mezz.jei:jei-${neoforge_minecraft_version}-common-api:${jei_version}")
        compileOnly("mezz.jei:jei-${neoforge_minecraft_version}-neoforge-api:${jei_version}")
        compileOnly "me.shedaniel:REIPluginCompatibilities-forge-annotations:${reipc_forge_annotations_version}"
        if (project.hasProperty('enable_jei') && project.enable_jei.toBoolean()) {
            runtimeOnly("mezz.jei:jei-${neoforge_minecraft_version}-neoforge:${jei_version}")
        }
    }

    // REI
    if (project.hasProperty('rei_version') && project.hasProperty('cloth_config_version') && project.hasProperty('architectury_version')) {
        compileOnly "me.shedaniel:RoughlyEnoughItems-api-neoforge:${rei_version}"
        compileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-neoforge:${rei_version}"
        api "me.shedaniel.cloth:cloth-config-neoforge:${cloth_config_version}"
        api "dev.architectury:architectury-neoforge:${architectury_version}"
        if (project.hasProperty('enable_rei') && project.enable_rei.toBoolean()) {
            runtimeOnly "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"
        }
    }

    // EMI
    if (project.hasProperty('emi_version')) {
        compileOnly "curse.maven:emi-580555:${emi_version}"
        if (project.hasProperty('enable_emi') && project.enable_emi.toBoolean()) {
            runtimeOnly "curse.maven:emi-580555:${emi_version}"
        }
    }

    // JADE
    if (project.hasProperty('jade_version')) {
        runtimeOnly "curse.maven:jade-324717:${jade_version}"
    }

    // CATALOGUE
    if (project.hasProperty('catalogue_version')) {
        runtimeOnly "curse.maven:catalogue-459701:${catalogue_version}"
    }
}

tasks.register('publishCurseForge', TaskPublishCurseForge) {
    apiToken = file('../../API Tokens/justenoughbreeding.md')
    def projectId = "${cf_id}".toString()
    def mainFile = upload(projectId, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) as Object
    mainFile.changelogType = 'markdown'
    mainFile.changelog = file('changelog.md')
    mainFile.addGameVersion('Client', 'Server')
    mainFile.releaseType = "${release_type}"
    "${neoforge_release_versions}".split(',').each {
        mainFile.addGameVersion("${it}")
    }
    if (project.hasProperty('jei_version')) {
        mainFile.addOptional("jei")
    }
    if (project.hasProperty('rei_version')) {
        mainFile.addOptional("roughly-enough-items")
    }
    if (project.hasProperty('emi_version')) {
        mainFile.addOptional("emi")
    }
    mainFile.addOptional("aquaculture")
    mainFile.addOptional("sophisticated-wolves")
    mainFile.addOptional("the-twilight-forest")
    mainFile.addOptional("quark")
    mainFile.addOptional("waddles")
    mainFile.addOptional("blue-skies")
    mainFile.addOptional("chileancraft")
    mainFile.addOptional("autumnity")
    mainFile.addOptional("apple-cows")
    mainFile.addOptional("snow-pig")
    mainFile.addOptional("greek-fantasy")
    mainFile.addOptional("frozen-up")
    mainFile.addOptional("catalogue")
    mainFile.addOptional("frostrealm")
    mainFile.addOptional("caracal-mod")
    mainFile.addOptional("kiwi-boi")
    mainFile.addOptional("steves-vanilla")
    mainFile.addOptional("snuffles")
    mainFile.addOptional("lil-wings")
    mainFile.addOptional("ecologics")
    mainFile.addOptional("ydms-ducks-mod")
    mainFile.addOptional("ydms-glare")
    mainFile.addOptional("duckling")
    mainFile.addOptional("friends-and-foes-forge")
    mainFile.addOptional("ydms-red-panda")
    mainFile.addOptional("naturalist")
    mainFile.addOptional("the-ulterlands")
    mainFile.addOptional("biome-backlog")
    mainFile.addOptional("marine-iguana")
    mainFile.addOptional("ydms-ostrich")
    mainFile.addOptional("ydms-fennec-fox")
    mainFile.addOptional("recrafted-creatures")
    mainFile.addOptional("earth-mobs")
    mainFile.addOptional("biome-makeover-forge")
    mainFile.addOptional("alexs-caves")
    mainFile.addOptional("untamedwilds")
    mainFile.addOptional("alexs-mobs")
    mainFile.addOptional("chococraft")
    mainFile.addOptional("ice-and-fire-dragons")
    mainFile.addOptional("aether")
    mainFile.addOptional("aether-redux")
    mainFile.addOptional("deep-aether")
    mainFile.addOptional("call-of-the-wild")
    mainFile.addOptional("creatures-and-beasts")
    mainFile.addOptional("winter-overhaul")
    mainFile.addOptional("critters-and-companions")
    mainFile.addOptional("ambient-additions")
    mainFile.addOptional("terrafirmacraft")
    mainFile.addOptional("lets-do-meadow")
    mainFile.addOptional("environmental")
    mainFile.addOptional("atmospheric")
    mainFile.addOptional("buzzier-bees")
    mainFile.addOptional("upgrade-aquatic")
    mainFile.addOptional("fish-of-thieves")
    mainFile.addOptional("neapolitan")
}

modrinth {
    def tokenText = file('../../API Tokens/modrinth.md')
    if (tokenText.exists()) {
        token = tokenText.text
    } else {
        token = ""
    }
    projectId = "${modrinth_id}"
    versionName = getArchivesBaseName() + "-" + getVersion()
    versionType = "${release_type}"
    changelog = file('changelog.md').text
    uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")
    gameVersions = "${neoforge_release_versions}".split(",") as List<String>
    dependencies {
        if (project.hasProperty('jei_version')) {
            optional.project "jei"
        }
        if (project.hasProperty('rei_version')) {
            optional.project "rei"
        }
        if (project.hasProperty('emi_version')) {
            optional.project "emi"
        }
        optional.project "quark"
        optional.project "blue-skies"
        optional.project "snowpig"
        optional.project "caracal_mob"
        optional.project "kiwi-boi"
        optional.project "snuffles"
        optional.project "lil-wings"
        optional.project "ecologics"
        optional.project "the-ducks"
        optional.project "ydms-glare"
        optional.project "duckling"
        optional.project "friends-and-foes-forge"
        optional.project "ydms-red-panda"
        optional.project "naturalist"
        optional.project "ydms-ostrich"
        optional.project "ydms-fennec-fox"
        optional.project "earthmobs"
        optional.project "biome-makeover"
        optional.project "alexs-caves"
        optional.project "alexs-mobs"
        optional.project "chococraft"
        optional.project "ice-and-fire-dragons"
        optional.project "aether"
        optional.project "the-aether-redux"
        optional.project "deep-aether"
        optional.project "creatures-and-beasts"
        optional.project "winter-overhaul"
        optional.project "critters-and-companions"
        optional.project "terrafirmacraft"
        optional.project "lets-do-meadow"
        optional.project "environmental"
        optional.project "atmospheric"
        optional.project "buzzier-bees"
        optional.project "upgrade-aquatic"
        optional.project "fish-of-thieves"
        optional.project "neapolitan"
    }
}